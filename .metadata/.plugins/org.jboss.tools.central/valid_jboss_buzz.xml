<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Extend C++ capabilities with LLVM STLExtras.h</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ez-quzscw6s/" /><category term="C++" /><category term="clang/LLVM" /><category term="Programming Languages" /><category term="c++" /><author><name>Jan Kratochvil</name></author><id>https://developers.redhat.com/blog/?p=639587</id><updated>2019-10-18T07:00:29Z</updated><published>2019-10-18T07:00:29Z</published><content type="html">&lt;p&gt;The &lt;a href="https://llvm.org/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://llvm.org/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGy1QndY4UmIYMP-47-JCDe0FJcNQ"&gt;LLVM compiler project&lt;/a&gt; provides a &lt;a href="https://github.com/llvm-mirror/llvm/blob/master/include/llvm/ADT/STLExtras.h" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/master/include/llvm/ADT/STLExtras.h&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFCA_oggXUkXnzRlZVNJgud7-R9XA"&gt;header file called STLExtras.h&lt;/a&gt; that extends the capabilities of C++ without any dependency on the rest of LLVM. In this article, we take a quick look at its basic functionality.&lt;span id="more-639587"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;LLVM STLExtras.h&lt;/h2&gt; &lt;p&gt;For the &lt;code&gt;/usr/include/llvm/ADT/STLExtras.h&lt;/code&gt; file, you need to install:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Fedora: &lt;code&gt;dnf install llvm-devel&lt;/code&gt;&lt;/li&gt; &lt;li&gt;RHEL-8: &lt;code&gt;yum install llvm-devel&lt;/code&gt;&lt;/li&gt; &lt;li&gt;RHEL-7/8 with &lt;a href="https://developers.redhat.com/HW/ClangLLVM-RHEL-7/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://developers.redhat.com/HW/ClangLLVM-RHEL-7/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFl8pCz2sRfZS0pi9pww75BDtXsbw"&gt;LLVM toolset 7.0&lt;/a&gt;: &lt;code&gt;yum install llvm-toolset-7.0-{clang,llvm-devel};scl enable llvm-toolset-7.0 -- clang++ -I$(scl enable llvm-toolset-7.0 -- llvm-config --includedir) -std=c++17 ...&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;llvm::reverse&lt;/h2&gt; &lt;p&gt;= reverse range-based for loop&lt;/p&gt; &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/C%2B%2B11" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.wikipedia.org/wiki/C%252B%252B11&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHE0u7b18Ycy_XBKMVpUmy_T7K2MA"&gt;C++11&lt;/a&gt; brought &lt;a href="https://en.cppreference.com/w/cpp/language/range-for" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/language/range-for&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE1LrneBrh6byiNYcQeV7h8GIIJZw"&gt;range-based for loops&lt;/a&gt;. We no longer have to deal with iterators in the most common cases.&lt;/p&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/GgIB-R" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/GgIB-R&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFfhkHXHP2Ex29rlgCzfiy0YeUodg"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; // C++11 initializer list // C++98 iterator: 1 2 3 4 for (std::vector&lt;u&gt;&lt;/u&gt;::iterator it = vec.begin(); it != vec.end(); ++it) std::cout &amp;#60;&amp;#60; *it; // C++11 range-based for loop: 1 2 3 4 for (int i : vec) std::cout &amp;#60;&amp;#60; i; &lt;/pre&gt; &lt;p&gt;Except&amp;#8230; when we need to iterate in the opposite way. C++11 somehow forgot about that. Here comes LLVM with its &lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L273" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L273&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGYDyvzBn0Ogb1Us1lVGIlsqYfXRg"&gt;llvm::reverse&lt;/a&gt; container adapter.&lt;/p&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/TX59Jv" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/TX59Jv&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFtm7gjJtJ4WCILJ8dpItFKTd4IwA"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; // Reverse range-based for loop - llvm::reverse: 4 3 2 1 for (int i : llvm::reverse(vec)) std::cout &amp;#60;&amp;#60; i; } &lt;/pre&gt; &lt;h2&gt;Range-based algorithms&lt;/h2&gt; &lt;p&gt;= &lt;code&gt;vec.begin(),vec.end()&lt;/code&gt; → &lt;code&gt;vec&lt;/code&gt;&lt;/p&gt; &lt;p&gt;It&amp;#8217;s a bit annoying to always write both &lt;code&gt;begin()&lt;/code&gt; and &lt;code&gt;end()&lt;/code&gt; for container algorithms, right?&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; std::sort(vec.begin(),vec.end()); // or: std::sort(vec.begin(),vec.end(), std::greater&lt;u&gt;&lt;/u&gt;()); &lt;/pre&gt; &lt;p&gt;The problem is solved already; it really is that simple:&lt;/p&gt; &lt;pre&gt;#define LLVM_DISABLE_ABI_BREAKING_CHECKS_ENFORCING 1 // no LLVM libraries needed #include &amp;#60;llvm/ADT/STLExtras.h&amp;#62; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; llvm::sort(vec); // or: llvm::sort(vec, std::greater&lt;u&gt;&lt;/u&gt;()); &lt;/pre&gt; &lt;p&gt;It applies to all the C++ algorithms: ­&lt;a href="http://www.cplusplus.com/reference/algorithm/sort/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/sort/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE34qqxtdZxZCkRjtCIoykhcgLIhg"&gt;std::sort&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/for_each/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/for_each/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHMEDxCzGvNIGnlxZ--BEXeDIxCKw"&gt;std::for_each&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/all_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/all_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFwZrw3iXvWmCu15vLmf7Go5O5s4g"&gt;std::all_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/any_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/any_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFqk66h8hbXzieTbaoDcK-uF862ug"&gt;std::any_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/none_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/none_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHAWgXrOEDF35MOpCSFtOaZK_EcOA"&gt;std::none_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHIiJKe0MuM8PdHfh64ZFb6M6tmQw"&gt;std::find&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGBWpLvsN41KvbdXr7iuJMRIs5eTg"&gt;std::find_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find_if_not/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find_if_not/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHlIAiuyR-bDpaMKlsCVYP1aaAysQ"&gt;std::find_if_not&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/remove_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/remove_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFW_EvNP43yygHH4XEvd_1Ex4lsdQ"&gt;std::remove_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/copy_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/copy_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHFqqU28JjWZ87HAqyEcQRaNrb8Iw"&gt;std::copy_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/copy/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/copy/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFhSIxPYNTOa4k6b6BL5Q5Yb95ZwA"&gt;std::copy&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/count/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/count/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE21v3xHZ2bfJolTEjLZJeDQCtwoA"&gt;std::count&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/count_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/count_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGVV4MBWrjaIeEDZpn4KruLGOa0vg"&gt;std::count_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/transform/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/transform/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE926KuJ_XL2LYBXuOFxcy2FwNwDg"&gt;std::transform&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/partition/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/partition/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGz3VpxkIa3mL5aVuNxFgAoWylhVg"&gt;std::partition&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/lower_bound/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/lower_bound/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHEvwxkwo305YahXmyIVxUdqZYK_w"&gt;std::lower_bound&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/upper_bound/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/upper_bound/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNG__RZcYrmNBIwx9qIMX8agt65L_g"&gt;std::upper_bound&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It is &lt;a href="https://en.cppreference.com/w/cpp/experimental/ranges" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/experimental/ranges&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFKpx1k5TvxJPTr24jt_Ym-3e2kjQ"&gt;expected as &lt;code&gt;std::ranges::&lt;/code&gt; in C++20&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Additionally, it provides:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1221" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1221&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGR1Ip99rGfRx9nhhNs3xn3K5pVTQ"&gt;is_contained&lt;/a&gt; = &lt;a href="http://www.cplusplus.com/reference/algorithm/find/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find/&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNEHoVLEYXKATRPYVBIpw9iO8bvx7A"&gt;std::find&lt;/a&gt; with a &lt;code&gt;bool&lt;/code&gt; result&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1306" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1306&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNHaIWq7In18keXsR6gCypKVUdohdw"&gt;is_splat &lt;/a&gt;= return a &lt;code&gt;bool&lt;/code&gt; whether all elements in a container are the same&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1324" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1324&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNGA5weBR4Frb3Sy25nU0gbvWhgM4w"&gt;erase_if &lt;/a&gt;= &lt;a href="http://www.cplusplus.com/reference/algorithm/remove_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/remove_if/&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNF-HAt98oOYfToCDvn7UbeSk7F-nQ"&gt;std::remove_if&lt;/a&gt; with more convient calling (&lt;a href="https://en.cppreference.com/w/cpp/experimental/lib_extensions_2#Uniform_container_erasure" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/experimental/lib_extensions_2%23Uniform_container_erasure&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNGuxOhCSfInUNvsiGXzRG1-0jZCjA"&gt;expected in C++20&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/_WIEsA" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/_WIEsA&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNExAK3kk002i0Tpv_swDxl6K1s6Gg"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#038;title=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" data-a2a-url="https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/" data-a2a-title="Extend C++ capabilities with LLVM STLExtras.h"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/"&gt;Extend C++ capabilities with LLVM STLExtras.h&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ez-quzscw6s" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The LLVM compiler project provides a header file called STLExtras.h that extends the capabilities of C++ without any dependency on the rest of LLVM. In this article, we take a quick look at its basic functionality. LLVM STLExtras.h For the /usr/include/llvm/ADT/STLExtras.h file, you need to install: Fedora: dnf install llvm-devel RHEL-8: yum install llvm-devel RHEL-7/8 with LLVM toolset [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/"&gt;Extend C++ capabilities with LLVM STLExtras.h&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">639587</post-id><dc:creator>Jan Kratochvil</dc:creator><dc:date>2019-10-18T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/</feedburner:origLink></entry><entry><title>New features in .NET Core 3.0 on Linux</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zAmbhMOnfM4/" /><category term=".NET" /><category term=".NET Core" /><category term="Linux" /><author><name>Tom Deseyn</name></author><id>https://developers.redhat.com/blog/?p=629907</id><updated>2019-10-17T07:05:31Z</updated><published>2019-10-17T07:05:31Z</published><content type="html">&lt;p&gt;.NET Core 3.0 brings many exciting &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0"&gt;new features&lt;/a&gt;, including a &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8"&gt;new major release of C#&lt;/a&gt;, &lt;a href="https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/"&gt;improved performance&lt;/a&gt; and support for &lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/"&gt;building Windows desktop applications&lt;/a&gt; (on Windows). In this article, we’ll look at interesting new features for Linux and Linux container users.&lt;span id="more-629907"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Faster and smaller SDK&lt;/h3&gt; &lt;p&gt;The SDK is smaller and faster. Previous versions of .NET Core used NuGet packages when building an application. These NuGet packages contained both reference assemblies (describing the API) and implementation assemblies. .NET Core 3.0 uses references packs that come with the SDK. Because these packs don’t include an implementation, they are smaller than the NuGet packages. This makes the SDK smaller (in case NuGet packages were included with the SDK) or faster (in case NuGet packages had to be downloaded from nuget.org).&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/dotnet/source-build/"&gt;Source build .NET Core&lt;/a&gt; (like on Red Hat Enterprise Linux, Red Hat OpenShift, and &lt;a href="https://fedoraloves.net/"&gt;Fedora .NET SIG&lt;/a&gt;) now includes the ASP.NET Core framework. This reduces time to build ASP.NET Core applications (no more nuget.org downloads), speeds up these applications (AOT compilation), and provides security fixes via package update (instead of having to rebuild the application).&lt;/p&gt; &lt;h3&gt;Framework-dependent executables, single file publish, trimming&lt;/h3&gt; &lt;p&gt;With previous versions, a native executable was only included when publishing a self-contained application. Now, a native executable is also included with framework-dependent applications:&lt;/p&gt; &lt;pre&gt;$ dotnet new console -o console $ cd console $ dotnet publish $ bin/Debug/netcoreapp3.0/publish/console Hello World! &lt;/pre&gt; &lt;p&gt;By default, this native executable is for the platform you are running on. It’s possible to build a native executable for a different platform (like Windows) by specifying a runtime id (&lt;code&gt;-r&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 --no-self-contained $ ls /tmp/console3/bin/Debug/netcoreapp3.0/win-x64/publish/ console3.deps.json console3.dll console3.exe console3.pdb console3.runtimeconfig.json &lt;/pre&gt; &lt;p&gt;Note that we’re passing the &lt;code&gt;--no-self-contained&lt;/code&gt; flag in order to build a framework-dependent application. Without it, the application would be self-contained (which means it includes the runtime).&lt;/p&gt; &lt;p&gt;If you want a native executable that works across a range of Linux distributions, you can specify &lt;code&gt;linux-x64&lt;/code&gt; as the rid. This executable depends on the GNU C library, which is used on many distributions (including Fedora and RHEL). If your executable is for a musl-based distribution, like Alpine, you can specify the &lt;code&gt;linux-musl-x64&lt;/code&gt; rid.&lt;/p&gt; &lt;p&gt;Both self-contained and framework-dependent application support packing the application into a single native executable. To do this, you can set the &lt;code&gt;PublishSingleFile&lt;/code&gt; property.&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 /p:PublishSingleFile=true $ ls -lh bin/Debug/netcoreapp3.0/win-x64/publish/*.exe -rwxrw-r--. 1 tmds tmds 66M Sep 13 09:08 bin/Debug/netcoreapp3.0/win-x64/publish/console.exe &lt;/pre&gt; &lt;p&gt;The previous command packed the entire application into a self-contained Windows executable. You can see from the size (66M) that the runtime is included.&lt;/p&gt; &lt;p&gt;The SDK can now also leverage &lt;a href="https://github.com/mono/linker"&gt;mono’s linker&lt;/a&gt; to detect unused assemblies. When we add the &lt;code&gt;PublishTrimmed&lt;/code&gt; property, our self-contained app shrinks to 26M.&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true $ ls -lh bin/Debug/netcoreapp3.0/win-x64/publish/*.exe -rwxrw-r--. 1 tmds tmds 26M Sep 13 09:09 bin/Debug/netcoreapp3.0/win-x64/publish/console.exe &lt;/pre&gt; &lt;h3&gt;ARM64&lt;/h3&gt; &lt;p&gt;.NET Core adds support for Linux ARM64. The primary use case is Internet of Things (IoT) scenarios.&lt;/p&gt; &lt;h3&gt;SerialPort support&lt;/h3&gt; &lt;p&gt;The &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.io.ports.serialport?view=netcore-3.0"&gt;SerialPort&lt;/a&gt; class now also works on Linux. You can use this for example when running .NET Core on Raspberry Pi or other embedded Linux platforms.&lt;/p&gt; &lt;h3&gt;TLS 1.3&lt;/h3&gt; &lt;p&gt;When .NET Core runs on a system with &lt;a href="https://www.openssl.org/blog/blog/2018/09/11/release111/"&gt;OpenSSL 1.1.1&lt;/a&gt; (like recent versions of Fedora, and RHEL8) &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.security.sslstream?view=netcore-3.0"&gt;SslStream&lt;/a&gt; and &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient?view=netcore-3.0"&gt;HttpClient&lt;/a&gt; use TLS 1.3 when the peer supports it. TLS 1.3 improves connection time and security.&lt;/p&gt; &lt;h3&gt;Building systemd services&lt;/h3&gt; &lt;p&gt;.NET Core comes with templates for building workers, which are long-running services. The worker template (&lt;code&gt;dotnet new worker&lt;/code&gt;) has extension packages for building &lt;a href="https://devblogs.microsoft.com/aspnet/net-core-workers-as-windows-services/"&gt;Windows services&lt;/a&gt; and &lt;a href="https://devblogs.microsoft.com/dotnet/net-core-and-systemd/"&gt;systemd services&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;ReadyToRun&lt;/h3&gt; &lt;p&gt;The SDK now allows the application to be compiled ahead of time. This adds native code in the assemblies. It also means the code no longer has to be just-in-time compiled when it is first executed, which reduces startup time.&lt;/p&gt; &lt;p&gt;To publish a ready-to-run application, you need to specify a runtime identifier (which determines the native code you’ll generate) and the &lt;code&gt;/p:PublishReadyToRun=true&lt;/code&gt; argument.&lt;/p&gt; &lt;pre&gt;$ dotnet build -r linux-x64 /p:PublishReadyToRun=true &lt;/pre&gt; &lt;p&gt;By default, this publishes a self-contained application. To publish a framework dependent application, you can add &lt;code&gt;--no-self-contained&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;OpenShift’s .NET Core builder (&lt;a href="https://github.com/redhat-developer/s2i-dotnetcore"&gt;s2i-dotnetcore&lt;/a&gt;) can build ReadyToRun images by setting the new &lt;code&gt;DOTNET_PUBLISH_READYTORUN&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;GC in containers with low memory&lt;/h3&gt; &lt;p&gt;.NET Core 3.0 works better in containers with low memory allocation. Previous versions allocated a large heap per CPU and performed garbage collections (GCs) based on memory used versus memory available. This could lead to the application going out-of-memory (OOM). &lt;a href="https://devblogs.microsoft.com/dotnet/using-net-and-docker-together-dockercon-2019-update/"&gt;.NET Core 3.0 takes into account the memory limits when heaps are created&lt;/a&gt;. This means the heaps are smaller, and the number of heaps is limited depending on the memory allocated to the container.&lt;/p&gt; &lt;p&gt;Changing ASP.NET Core applications to use workstation garbage collector (GC) has been a way to work around this issue (workstation GC uses a single, smaller heap). This workaround is no longer necessary with .NET Core 3.0.&lt;/p&gt; &lt;p&gt;If you wonder what type of GC your app is using: by default ASP.NET Core applications (which use the &lt;code&gt;Microsoft.NET.Sdk.Web&lt;/code&gt; in the &lt;code&gt;csproj&lt;/code&gt; file) use server GC. Console applications (&lt;code&gt;Microsoft.NET.Sdk&lt;/code&gt;) default to workstation GC. When the application is running on a single processor (like a container with CPU allocated 1 or less), the runtime will automatically switch to workstation GC.&lt;/p&gt; &lt;h3&gt;GC on machines with more than 64 CPUs&lt;/h3&gt; &lt;p&gt;Windows APIs are based on &lt;a href="https://docs.microsoft.com/en-us/windows/win32/procthread/processor-groups"&gt;processor groups&lt;/a&gt; of up to 64 processors, while Linux APIs work with an arbitrary number of processors. In previous versions of .NET Core, the GC would artificially group processors on Linux to form processor groups. &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/gccpugroup-element"&gt;By default&lt;/a&gt;, server GC would limit its number of threads to the number of processors in a single group (max 64). With .NET Core 3.0, the processor group emulation is removed from the GC, and server GC will match the number of processors allocated to the process (not limited to 64).&lt;/p&gt; &lt;h3&gt;Huge page support&lt;/h3&gt; &lt;p&gt;On systems that are configured with &lt;a href="https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt"&gt;huge page support&lt;/a&gt;, the .NET GC can be configured to allocate huge pages by setting the environmental variable &lt;code&gt;COMPlus_GCLargePages&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;. Because memory is reserved when the application starts the GC needs to know how much memory it can use. The runtime assumes some limits when running in a container. If you’re running outside a container, you need to provide these this using &lt;a href="https://devblogs.microsoft.com/dotnet/running-with-server-gc-in-a-small-container-scenario-part-1-hard-limit-for-the-gc-heap/"&gt;COMPlus_GCHeapHardLimit/COMPlus_GCHeapHardLimitPercent&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Diagnostic tools&lt;/h3&gt; &lt;p&gt;With .NET Core 3.0, Microsoft is &lt;a href="https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/"&gt;providing&lt;/a&gt; cross-platform command-line tools for diagnostics: &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-dump-instructions.md"&gt;dotnet-dump&lt;/a&gt; (for collecting and analyzing dumps), &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-trace-instructions.md"&gt;dotnet-trace&lt;/a&gt; (for collecting traces), and &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-counters-instructions.md"&gt;dotnet-counters&lt;/a&gt; (for live viewing of performance counters).&lt;/p&gt; &lt;p&gt;For example, the following commands show how to install &lt;code&gt;dotnet-dump&lt;/code&gt;, use it to collect a dump from the running .NET Core application &lt;code&gt;console&lt;/code&gt;, load the dump, and show a managed stack trace.&lt;/p&gt; &lt;pre&gt;$ dotnet tool install -g dotnet-dump $ dotnet dump collect -p $(pidof console) Writing minidump with heap to /tmp/core_20190911_104217 Complete $ dotnet dump analyze /tmp/core_20190911_104217 Loading core dump: /tmp/core_20190911_104217 ... Ready to process analysis commands. Type 'help' to list available commands or 'help [command]' to get detailed help on a command. Type 'quit' or 'exit' to exit the session. &amp;#62; clrstack OS Thread Id: 0x3f4f (0) Child SP IP Call Site 00007FFE05DB3068 00007fe0f046c83c [HelperMethodFrame: 00007ffe05db3068] System.Threading.Thread.SleepInternal(Int32) 00007FFE05DB31B0 00007FE0760B580B System.Threading.Thread.Sleep(Int32) 00007FFE05DB31C0 00007FE0765C007D console.Program.Main(System.String[]) [/tmp/console/Program.cs @ 9] 00007FFE05DB34A8 00007fe0ef98df83 [GCFrame: 00007ffe05db34a8] 00007FFE05DB39A0 00007fe0ef98df83 [GCFrame: 00007ffe05db39a0] &amp;#62; &lt;/pre&gt; &lt;p&gt;As you can see, &lt;code&gt;console&lt;/code&gt; is calling &lt;code&gt;Thread.Sleep&lt;/code&gt; from &lt;code&gt;Program.Main&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Conclusion&lt;/h3&gt; &lt;p&gt;Here we covered several interesting features of .NET Core 3.0 on Linux and Linux containers. For a broader picture, check out the &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0"&gt;what’s new in .NET Core 3.0&lt;/a&gt; documentation.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#038;title=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" data-a2a-url="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/" data-a2a-title="New features in .NET Core 3.0 on Linux"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/"&gt;New features in .NET Core 3.0 on Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zAmbhMOnfM4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;.NET Core 3.0 brings many exciting new features, including a new major release of C#, improved performance and support for building Windows desktop applications (on Windows). In this article, we’ll look at interesting new features for Linux and Linux container users. Faster and smaller SDK The SDK is smaller and faster. Previous versions of .NET [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/"&gt;New features in .NET Core 3.0 on Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">629907</post-id><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-10-17T07:05:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/</feedburner:origLink></entry><entry><title>CI/CD for .NET Core container applications on Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PCNVKx067Xo/" /><category term=".NET" /><category term=".NET Core" /><category term="Containers" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Red Hat OpenShift Container Platform" /><category term="ci/cd" /><category term="container" /><author><name>chgan</name></author><id>https://developers.redhat.com/blog/?p=631597</id><updated>2019-10-17T07:00:48Z</updated><published>2019-10-17T07:00:48Z</published><content type="html">&lt;p&gt;Many people have done continuous integration and continuous delivery (CI/CD) for .NET Core, but they still may wonder how to implement this process in &lt;a href="https://developers.redhat.com/products/openshift"&gt;Red Hat OpenShift Container Platform (OCP)&lt;/a&gt;. The information is out there, but it has not been structurally documented. In this article, we&amp;#8217;ll walk through the process.&lt;span id="more-631597"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The CI/CD process for .NET applications&lt;/h2&gt; &lt;p&gt;The CI/CD process is fairly straightforward for .NET applications, with the following high-level process:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Start &lt;a href="https://jenkins.io" target="_blank" rel="noopener noreferrer"&gt;Jenkins&lt;/a&gt; to check out the Jenkinsfile.&lt;/li&gt; &lt;li&gt;Get the .NET Core source code from Gogs.&lt;/li&gt; &lt;li&gt;Continue according to the configured pipelines, which in this case means: &lt;ol type="a"&gt; &lt;li&gt;Run &lt;code&gt;dotnet restore&lt;/code&gt; to restore the NuGet packages from the Nexus repository.&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dotnet publish&lt;/code&gt; to build and publish the &lt;code&gt;.dll&lt;/code&gt; files.&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;oc start-build&lt;/code&gt; to build the container image using the published &lt;code&gt;.dll&lt;/code&gt; files, which deploys or redeploys the container when the image build in the &lt;code&gt;Development&lt;/code&gt; project is completed.&lt;/li&gt; &lt;li&gt;Tag the image in the &lt;code&gt;Development&lt;/code&gt; project (in this example, the tag is &lt;code&gt;sampledotnet:UATReady-1.0.0&lt;/code&gt;), which triggers an image pulled from the &lt;code&gt;Development&lt;/code&gt; project to the user acceptance testing (&lt;code&gt;UAT&lt;/code&gt;) project.&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The required Openshift artifacts for the &lt;code&gt;Development&lt;/code&gt; and &lt;code&gt;UAT&lt;/code&gt; projects are preconfigured in the next section by using the sample template, which you can download from GitHub.&lt;/p&gt; &lt;h2&gt;Configuring OpenShift&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may wish to change some of the paths and parameters according to your environment.&lt;/p&gt; &lt;p&gt;To configure Red Hat OpenShift for our example CI/CD process, complete the following steps.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create your OpenShift projects:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc new-project demo-dev --display-name="Development" oc new-project demo-uat --display-name="UAT" oc new-project demo-tools --display-name="CI/CD Tools"&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Apply the necessary permissions so Jenkins can modify and access the &lt;code&gt;Development&lt;/code&gt; and &lt;code&gt;UAT&lt;/code&gt; projects. We also need to grant permission for the &lt;code&gt;UAT&lt;/code&gt; project to pull images from the &lt;code&gt;Development&lt;/code&gt; project:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc policy add-role-to-user edit system:serviceaccount:demo-tools:jenkins -n demo-dev oc policy add-role-to-user edit system:serviceaccount:demo-tools:jenkins -n demo-uat oc policy add-role-to-user system:image-puller system:serviceaccount:demo-uat:default -n demo-dev&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If these lines result in &amp;#8220;Warning: ServiceAccount &amp;#8216;jenkins&amp;#8217; not found,&amp;#8221; this message can be ignored.&lt;/p&gt; &lt;ol start="3"&gt; &lt;li&gt;Deploy the necessary CI/CD tools:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc new-app -f https://raw.githubusercontent.com/chengkuangan/templates/master/gogs-persistent-template.yaml -p SKIP_TLS_VERIFY=true -p DB_VOLUME_CAPACITY=1Gi -p GOGS_VERSION=latest -p GOGS_LIMIT_CPU=300m -p GOGS_LIMIT_MEM=256Mi -p POSTGRESQL_LIMIT_CPU=200m -p POSTGRESQL_LIMIT_MEM=256Mi -n demo-tools oc new-app -f https://raw.githubusercontent.com/chengkuangan/templates/master/nexus3-persistent-templates.yaml -p NEXUS_VOLUME_CAPACITY=20Gi -p NEXUS_VERSION=latest -p NEXUS_LIMIT_CPU=1 -p NEXUS_LIMIT_MEM=3Gi -n demo-tools oc new-app jenkins-persistent -n demo-tools oc create -f https://raw.githubusercontent.com/chengkuangan/dotnetsample/master/templates/dotnet-jenkins-slave.yaml -n demo-tools&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Typically Microsoft Team Foundation Server (TFS) is used for source control management (SCM) in the Microsoft world; however, Gogs is used in this example mainly because there is no TFS available for me to try out. If TFS is the use case, you will need to install the TFS plugin for Jenkins to enable integration between Jenkins and TFS.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;Now, you can see your deployed tools in OpenShift:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634607 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-1024x474.png" style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-1024x474.png" alt="CI/CD tools in OpenShift." width="640" height="296" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-1024x474.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-300x139.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.25.23-PM-768x356.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;You may receive an error where the .Net Jenkins slave could not be started due to a missing ImageStream, like so:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634707 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-1024x28.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-1024x28.png" alt="ImageStream dotnet-22-jenkins-slave-rhel7 is Not Found" width="640" height="18" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-1024x28.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-300x8.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.48.12-PM-768x21.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;In this case, the image above shows an error in the Jenkins pod indicating that the ImageStream &lt;code&gt;dotnet-22-jenkins-slave-rhel7&lt;/code&gt; is not found. To fix this problem, you would change the following in the &lt;code&gt;dotnet-jenkin-slave.yaml&lt;/code&gt; file to use the correct URL path for the ImageStream setting:&lt;/p&gt; &lt;pre&gt;&amp;#60;image&amp;#62;dotnet-22-jenkins-slave-rhel7:latest&amp;#60;/image&amp;#62;&lt;/pre&gt; &lt;p&gt;Or, you can modify the ConfigMap created earlier (named &lt;code&gt;dotnet-jenkins-slave-22&lt;/code&gt; in this example).&lt;/p&gt; &lt;ol start="4"&gt; &lt;li&gt;Deploy the .NET Core artifacts using the .NET Core templates. Notice the parameter &lt;code&gt;--allow-missing-imagestream-tags=true&lt;/code&gt;, which indicates that we do not have any images available until we build them in when we run the pipelines:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;oc new-app -n demo-dev --allow-missing-imagestream-tags=true -f https://raw.githubusercontent.com/chengkuangan/dotnetsample/master/templates/dotnet-template.yaml -p IMAGE_PROJECT_NAME=demo-dev -p IMAGE_TAG=latest -p APPLICATION_NAME=sampledotnet oc new-app -n demo-uat --allow-missing-imagestream-tags=true -f https://raw.githubusercontent.com/chengkuangan/dotnetsample/master/templates/dotnet-nobuild-template.yaml -p IMAGE_PROJECT_NAME=demo-uat -p IMAGE_TAG=UATReady-1.0.0 -p APPLICATION_NAME=sampledotnet&lt;/pre&gt; &lt;ol start="5"&gt; &lt;li&gt;Log into Gogs and clone the .NET Core sample code from &lt;a href="https://github.com/chengkuangan/dotnetsample.git" target="_blank" rel="noopener noreferrer"&gt;https://github.com/chengkuangan/dotnetsample.git&lt;/a&gt;, shown below:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634677 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-1024x634.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-1024x634.png" alt="The cloned .Net Core source code in Gogs" width="640" height="396" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-1024x634.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-300x186.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.39.44-PM-768x476.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;ol start="6"&gt; &lt;li&gt;Create a Jenkins Pipeline item as shown here:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634687 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-1024x463.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-1024x463.png" alt="Create a Jenkins Pipeline." width="640" height="289" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-1024x463.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-300x136.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.41.51-PM-768x347.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;ol start="7"&gt; &lt;li&gt;Point the Git URL to the Gogs repository URL:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634697 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-1024x951.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-1024x951.png" alt="Choose Pipeline Script from SCM lets you enter the Gogs service URL in the Repositories field." width="640" height="594" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-1024x951.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-300x279.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-2019-09-30-at-8.45.22-PM-768x713.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt; &lt;ol start="8"&gt; &lt;li&gt;Go the Jenkins item just created and click &lt;em&gt;Build Now&lt;/em&gt;. The .NET apps will be built and deployed in no time.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Changing the .NET project files&lt;/h2&gt; &lt;p&gt;The following summarizes the changes required in the .NET project files:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Introduce &lt;code&gt;RuntimeIdentifier&lt;/code&gt; into the existing &lt;code&gt;.csproj&lt;/code&gt; file to indicate that this project should be built for the Red Hat Enterprise Linux 7 environment:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt; &amp;#60;PropertyGroup&amp;#62;    &amp;#60;TargetFramework&amp;#62;netcoreapp2.2&amp;#60;/TargetFramework&amp;#62;    &amp;#60;AspNetCoreHostingModel&amp;#62;InProcess&amp;#60;/AspNetCoreHostingModel&amp;#62;    &amp;#60;DockerDefaultTargetOS&amp;#62;Linux&amp;#60;/DockerDefaultTargetOS&amp;#62;    &amp;#60;UserSecretsId&amp;#62;0a9f43ee-3c69-42b2-9766-c1b35bafeebd&amp;#60;/UserSecretsId&amp;#62;    &amp;#60;RuntimeIdentifier&amp;#62;rhel.7-x64&amp;#60;/RuntimeIdentifier&amp;#62;   &amp;#60;/PropertyGroup&amp;#62;&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Add NuGet package configuration into the &lt;code&gt;.csproj&lt;/code&gt; and &lt;code&gt;.deps.json&lt;/code&gt; files to test whether the Nexus works as expected for NuGet packages. A snippet of this configuration change is shown below:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt; &amp;#60;ItemGroup&amp;#62;    &amp;#60;PackageReference Include="Microsoft.AspNetCore.App" Version="2.2.0"/&amp;#62;    &amp;#60;PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" /&amp;#62;    &amp;#60;PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.4.10" /&amp;#62;    &amp;#60;PackageReference Include="Dapper" Version="1.60.6"/&amp;#62; &amp;#60;/ItemGroup&amp;#62;&lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;For the .NET apps build process to refer to our predefined repository in Nexus, we need to create a &lt;code&gt;nuget.config&lt;/code&gt; file in the project&amp;#8217;s root folder. Use the following configuration as the bare minimum settings. Notice the &lt;code&gt;Nexus_Packages&lt;/code&gt; under &lt;code&gt;&amp;#60;packageSources&amp;#62;&lt;/code&gt;, where we set the proxy repository in the Nexus server:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt; &amp;#60;?xml version="1.0" encoding="utf-8"?&amp;#62; &amp;#60;configuration&amp;#62;    &amp;#60;packageRestore&amp;#62;       &amp;#60;!-- Allow NuGet to download missing packages --&amp;#62;        &amp;#60;add key="enabled" value="True" /&amp;#62;        &amp;#60;!-- Automatically check for missing packages during build in Visual Studio --&amp;#62;        &amp;#60;add key="automatic" value="True" /&amp;#62;    &amp;#60;/packageRestore&amp;#62;    &amp;#60;solution&amp;#62;       &amp;#60;add key="disableSourceControlIntegration" value="true" /&amp;#62;    &amp;#60;/solution&amp;#62;    &amp;#60;packageSources&amp;#62;        &amp;#60;add key="Nexus_Packages" value="http://nexus3-demo-tools.apps.ocp.demo.com/repository/nuget.org-proxy/" /&amp;#62;   &amp;#60;/packageSources&amp;#62; &amp;#60;/configuration&amp;#62;&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Create the following Jenkinsfile in the project&amp;#8217;s root folder:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;#!groovy def DEV_PROJECTNAME = "demo-dev" def UAT_PROJECTNAME = "demo-uat" def BUILDCONFIGNAME="sampledotnet" def IMAGE_NAME="sampledotnet:latest" def UATIMAGENAME = "sampledotnet:UATReady-1.0.0" node('dotnet-22') {  stage('Clone') {    checkout scm  }  stage('Restore') {    sh "dotnet restore Test.csproj --configfile nuget.config --force --verbosity d"  }  stage('Publish') {     sh "dotnet publish Test.csproj --no-restore  -c Release /p:MicrosoftNETPlatformLibrary=Microsoft.NETCore.App"  }  stage('Build Image') {    sh "oc -n $DEV_PROJECTNAME start-build $BUILDCONFIGNAME --from-dir=./bin/Release/netcoreapp2.2/rhel.7-x64/publish --follow"    sh "oc -n $DEV_PROJECTNAME tag $DEV_PROJECTNAME/$IMAGE_NAME $UAT_PROJECTNAME/$UATIMAGENAME"  } }&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may create the pipelines as part of YAML config in Openshift. However, I personally prefer to keep the Jenkinsfile as part of the project files in the source control system.&lt;/p&gt; &lt;p&gt;As illustrated in the above pipelines, instead of using the &lt;code&gt;dotnet publish&lt;/code&gt; command to perform both the restore and publish processes, a &lt;code&gt;--no-restore&lt;/code&gt; parameter is specified. This setup is to keep the command from calling the &lt;code&gt;dotnet restore&lt;/code&gt; command automatically, which would cause it to bypass the &lt;code&gt;nuget.config&lt;/code&gt; and directly connect to &lt;a href="http://nuget.org" target="_blank" rel="noopener noreferrer"&gt;nuget.org&lt;/a&gt; to download the &lt;code&gt;nuget&lt;/code&gt; packages. We introduce another stage before the Publish stage to explicitly call the &lt;code&gt;dotnet restore&lt;/code&gt; command by pointing to &lt;code&gt;nuget.config&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I hope this article helps you implement CI/CD for .NET Core using Red Hat OpenShift Container Platform.&lt;/p&gt; &lt;h3&gt;References&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/creating_images/guidelines.html" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Guidelines&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.2/html/getting_started_guide/index" target="_blank" rel="noopener noreferrer"&gt;.NET Core 2.2 Container Getting Started Guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/chengkuangan/dotnetsample" target="_blank" rel="noopener noreferrer"&gt;Sample dotnet project used in this tutorial&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish?tabs=netcore21" target="_blank" rel="noopener noreferrer"&gt;dotnet publish command guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore?tabs=netcore2x" target="_blank" rel="noopener noreferrer"&gt;dotnet restore command guide&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file" target="_blank" rel="noopener noreferrer"&gt;nuget.config reference&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/nuget/" target="_blank" rel="noopener noreferrer"&gt;NuGet documentation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#38;linkname=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fci-cd-for-net-core-container-applications-on-red-hat-openshift%2F&amp;#038;title=CI%2FCD%20for%20.NET%20Core%20container%20applications%20on%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/10/17/ci-cd-for-net-core-container-applications-on-red-hat-openshift/" data-a2a-title="CI/CD for .NET Core container applications on Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/17/ci-cd-for-net-core-container-applications-on-red-hat-openshift/"&gt;CI/CD for .NET Core container applications on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PCNVKx067Xo" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Many people have done continuous integration and continuous delivery (CI/CD) for .NET Core, but they still may wonder how to implement this process in Red Hat OpenShift Container Platform (OCP). The information is out there, but it has not been structurally documented. In this article, we&amp;#8217;ll walk through the process. The CI/CD process for .NET [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/17/ci-cd-for-net-core-container-applications-on-red-hat-openshift/"&gt;CI/CD for .NET Core container applications on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">631597</post-id><dc:creator>chgan</dc:creator><dc:date>2019-10-17T07:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/17/ci-cd-for-net-core-container-applications-on-red-hat-openshift/</feedburner:origLink></entry><entry><title>Getting Started with Cloud Native Development on OpenShift Container Platform (video)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WAl7tPA84Go/getting-started-with-cloud-native-development-on-openshift-video.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyStudio" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-getting_started_with_cloud_native_development_on_openshift_container_platform_video</id><updated>2019-10-17T05:00:00Z</updated><published>2019-10-17T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://vimeo.com/365029937" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="909" data-original-width="1600" height="181" src="https://1.bp.blogspot.com/-HUcjlBR850U/XZyZAxIFobI/AAAAAAAAwrk/UKdGL0ScDO0GnGMfC7OTPWKCfYHyzC0HACNcBGAsYHQ/s320/Screenshot%2B2019-10-08%2Bat%2B16.09.43.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;After hosting a webinar to kick start developers looking to get hands on with an easy to use Cloud Native developer tool chain, I wanted to share a step-by-step video with you. &lt;br /&gt;&lt;br /&gt;The video walks through the use of Red Hat Developers hosted tooling for Red Hat OpenShift Application Runtimes (RHOAR) used to automate the setup of a full cloud native development tool chain.&lt;br /&gt;&lt;br /&gt;First you'll use the Launcher to coordinate your setup, then choose a Spring Boot example application, create a git-based project with web hooks to push changes to an OpenShift Container Platform for automated build, test, and deployment using containers.&lt;br /&gt;&lt;br /&gt;Check it all out here, done in just under 10 minutes.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allow="autoplay; fullscreen" allowfullscreen="" frameborder="0" height="360" src="https://player.vimeo.com/video/365029937" width="640"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Enjoy and reach out if you have questions or comments.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=gEEmKMVnWfk:E-2Ag3a1QEU:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=gEEmKMVnWfk:E-2Ag3a1QEU:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/gEEmKMVnWfk" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WAl7tPA84Go" height="1" width="1" alt=""/&gt;</content><summary>After hosting a webinar to kick start developers looking to get hands on with an easy to use Cloud Native developer tool chain, I wanted to share a step-by-step video with you. The video walks through the use of Red Hat Developers hosted tooling for Red Hat OpenShift Application Runtimes (RHOAR) used to automate the setup of a full cloud native development tool chain. First you'll use the Launcher...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-10-17T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/gEEmKMVnWfk/getting-started-with-cloud-native-development-on-openshift-video.html</feedburner:origLink></entry><entry><title>New developer tools in Red Hat OpenShift 4.2</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/yei-ZkgNBcY/" /><category term="Developer Tools" /><category term="odo" /><category term="OpenShift" /><category term="Red Hat CodeReady Containers" /><category term="OpenShift 4.2" /><author><name>David Millsaps</name></author><id>https://developers.redhat.com/blog/?p=637847</id><updated>2019-10-16T13:00:57Z</updated><published>2019-10-16T13:00:57Z</published><content type="html">&lt;p&gt;Today’s&lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-expands-kubernetes-developer-experience-newest-version-red-hat-openshift-4"&gt; announcement&lt;/a&gt; of &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; 4.2 represents a major release for developers working with OpenShift and Kubernetes.  There is a new application development-focused user interface, new tools, and plugins for container builds, CI/CD pipelines, and serverless architecture.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignleft size-full wp-image-641377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-1024x665.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift.gif" alt="application topology view in openshift" width="1130" height="734" /&gt;&lt;br /&gt; &lt;i&gt;Application topology view in developer perspective.&lt;/i&gt;&lt;span id="more-637847"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;New features include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;A new developer perspective &lt;/b&gt;so you can focus on the application. This view is focused on information and configuration developers need to know. There is an enhanced UI for application topology and application builds makes it easier for developers to build, deploy and visualize containerized applications and cluster resources.&lt;br /&gt; &lt;a href="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/"&gt;See an in-depth review&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;b&gt;odo&lt;/b&gt;, a developer-focused command-line interface that simplifies application development on OpenShift. Using a “git push” style interaction, this CLI helps developers develop applications with on OpenShift without needing to understand the details of Kubernetes operations.&lt;br /&gt; &lt;a href="https://developers.redhat.com/products/odo"&gt;Get started with Odo&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Red Hat OpenShift Connector&lt;/b&gt; for Microsoft Visual Studio Code, JetBrains IDE (including IntelliJ) and Eclipse Desktop IDE, making it easier to plug into existing developer pipelines&lt;b&gt;. &lt;/b&gt;You can develop, build, debug, and deploy applications on OpenShift without leaving your favorite IDE.&lt;br /&gt; &lt;a href="https://developers.redhat.com/products/openshift-ide-extensions"&gt;Get the Red Hat OpenShift Connector for your IDE.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;Red Hat OpenShift Deployment Extension for Microsoft Azure DevOps.&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; Users of this DevOps toolchain can deploy their applications to Azure Red Hat OpenShift or any other OpenShift cluster directly from Microsoft Azure DevOps.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img class=" alignleft size-full wp-image-641257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/vsplugin-openshift.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/vsplugin-openshift.gif" alt="VS Code Plugin for OpenShift" width="706" height="554" /&gt;&lt;/p&gt; &lt;p&gt;&lt;i&gt;Red Hat OpenShift connector plugin view in Visual Studio Code.&lt;/i&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-containers"&gt;Red Hat CodeReady Containers&lt;/a&gt; is an easy way to try or develop with Red Hat OpenShift on your local machine. A preconfigured OpenShift cluster is tailored for a laptop or desktop development making it easier to get going quickly with a personal cluster. It’s the easiest way to get a cluster for following our OpenShift tutorials.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2019/10/15/local-openshift/"&gt;See overview videos for installing and using CodeReady Containers on your OS&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Service Mesh&lt;/h2&gt; &lt;p&gt;OpenShift Service Mesh is based on Istio along with the Kiali and Jaeger projects and delivered via Operator. OpenShift Service Mesh provides traffic monitoring, access control, discovery, security, resiliency, tracing, and reporting to a group of services by running as container sidecars. You get those features without any custom code; no changes are required to the code of any of your services.&lt;/p&gt; &lt;h2&gt;Preview: OpenShift Serverless and OpenShift Pipelines&lt;/h2&gt; &lt;p&gt;&lt;b&gt;Serverless: &lt;/b&gt;OpenShift Serverless lets you deploy applications that can scale to zero. Based on the Knative project, OpenShift Serverless gives you the Knative toolset but is easily installed via an Operator. OpenShift Serverless is available as an Operator on every OpenShift 4 cluster.  OpenShift Serverless ties into the developer-perspective available in OpenShift, with options for common workflows, such as Import from Git or Deploy an Image, allowing users to create serverless applications directly from the console.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Continuous integration and continuous delivery based on Tekton: &lt;/b&gt;In OpenShift, you have an alternative to Jenkins for CI/CD, called OpenShift Pipelines. Pipelines is based on the Tekton project and uses Operators as components in your automation. OpenShift Pipelines adopts the GitOps mindset with support for configuring the entire pipeline-as-code.  Each step is executed in its own container, so resources are only used when the step is running. This eliminates the need for a CI/CD server and gives control of the pipeline to the developer team. OpenShift Pipelines is available as an Operator in the OpenShift Operator Hub.&lt;/p&gt; &lt;p&gt;Learn about how to use these new tools and &lt;a href="https://developers.redhat.com/openshift/"&gt;application development with OpenShift at developers.redhat.com/openshift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#38;linkname=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fdeveloper-tools-openshift%2F&amp;#038;title=New%20developer%20tools%20in%20Red%20Hat%20OpenShift%204.2" data-a2a-url="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/" data-a2a-title="New developer tools in Red Hat OpenShift 4.2"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;New developer tools in Red Hat OpenShift 4.2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/yei-ZkgNBcY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Today’s announcement of Red Hat OpenShift 4.2 represents a major release for developers working with OpenShift and Kubernetes.  There is a new application development-focused user interface, new tools, and plugins for container builds, CI/CD pipelines, and serverless architecture. Application topology view in developer perspective. New features include: A new developer perspective so you can focus [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;New developer tools in Red Hat OpenShift 4.2&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">637847</post-id><dc:creator>David Millsaps</dc:creator><dc:date>2019-10-16T13:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/</feedburner:origLink></entry><entry><title>Tour of the Developer Perspective in the Red Hat OpenShift 4.2 web console</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/e5UlqbL1-dk/" /><category term="Kubernetes" /><category term="OpenShift" /><category term="OpenShift 4.2" /><author><name>Jan Kleinert</name></author><id>https://developers.redhat.com/blog/?p=637567</id><updated>2019-10-16T12:58:57Z</updated><published>2019-10-16T12:58:57Z</published><content type="html">&lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/opdrYhIjqrg?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Of all of the new features of the &lt;a href="https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/"&gt;Red Hat OpenShift 4.2 release&lt;/a&gt;, what I’ve been looking forward to the most are the developer-focused updates to the web console. If you’ve used&lt;a href="https://docs.openshift.com/container-platform/4.1/welcome/oce_about.html"&gt; OpenShift 4.1&lt;/a&gt;, then you’re probably already familiar with the updated Administrator Perspective, which is where you can manage workloads, storage, networking, cluster settings, and more.&lt;/p&gt; &lt;p&gt;The addition of the new Developer Perspective aims to give developers an optimized experience with the features and workflows they’re most likely to need to be productive. Developers can focus on higher level abstractions like their application and components, and then drill down deeper to get to the &lt;a href="https://developers.redhat.com/openshift/"&gt;OpenShift&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; resources that make up their application.&lt;/p&gt; &lt;p&gt;Let’s take a tour of the Developer Perspective and explore some of the key features.&lt;span id="more-637567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Topology view&lt;/h2&gt; &lt;p&gt;The Topology view presents an application-centric view of a project. With a project selected, the Topology view displays the different components that make up your application. You can see the name of the component as well as the pod status, build status (if applicable) and links to source code and routes when those are available. Components that are part of an application will all be in the same grouping, represented by the lighter-colored shape around the components in the screenshot below. The Kubernetes-recommended labels for applications and instances of applications are the basis for determining which components are in a grouping. You can optionally use the arrows to connect components within an application to help show relationships between components.&lt;/p&gt; &lt;h2&gt;&lt;img class=" aligncenter wp-image-637617 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console.png" alt="Application topology in OpenShift Developer Perspective" width="512" height="268" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/application-topology-openshift-developer-console-300x157.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/h2&gt; &lt;h2&gt;Viewing information about a component&lt;/h2&gt; &lt;p&gt;When you click a component in Topology view, a side panel will appear with information about that component. In the screenshot below, you can see what appears on the Resources tab in the panel when the frontend deployment config is clicked.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637627 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console.png" alt="Resources view in OpenShift Developer Perspective" width="512" height="290" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/resources-openshift-developer-console-300x170.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;There are links to pods, builds, services, and routes as well as shortcut links to view pod or build logs.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console.png" alt="Build log in openshift developer perspective" width="512" height="240" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/build-logs-openshift-developer-console-300x141.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Adding components to a Kubernetes application&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;The Developer Perspective has several built-in ways to streamline the process of deploying applications, services, and databases. When you select &lt;em&gt;+Add &lt;/em&gt;in the left navigation menu, you’ll see the options that are available.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637647 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console.png" alt="Add components in openshift developer perspective" width="512" height="299" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/add-components-openshift-developer-console-300x175.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;There are options to build and deploy from code in a Git repository, to deploy a container image, to deploy from the developer catalog, or from a Dockerfile or YAML/JSON definitions. You can also easily deploy databases for your application to use. Clicking on most of these options will give you a wizard-style experience that prompts you for the necessary information.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637657 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console.png" alt="deploy-openshift-developer-console" width="512" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/deploy-openshift-developer-console-300x184.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;h2&gt;Viewing and creating builds&lt;/h2&gt; &lt;p&gt;The &lt;em&gt;Builds&lt;/em&gt; link in the left navigation gives quick access to existing build configurations as well as an option to create new ones.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637767 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console.png" alt="builds screen openshift-developer-console" width="512" height="236" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/builds-openshift-developer-console-300x138.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;From that page, you can drill down into each build config for more information on the builds, environment variables, events, and more.&lt;/p&gt; &lt;h2&gt;Exploring Red Hat OpenShift Pipelines&lt;/h2&gt; &lt;p&gt;The Red Hat OpenShift 4.2 release will feature a developer preview for OpenShift’s new CI/CD solution called &lt;a href="https://www.openshift.com/learn/topics/pipelines"&gt;OpenShift Pipelines&lt;/a&gt;, which is based on &lt;a href="https://developers.redhat.com/blog/2019/07/19/getting-started-with-tekton-on-red-hat-openshift/"&gt;Tekton&lt;/a&gt;. The Developer Perspective will also feature a developer preview for OpenShift Pipelines for managing CI/CD with OpenShift.&lt;/p&gt; &lt;p&gt;If you have the OpenShift Pipelines Operator installed on your cluster, then you’ll see the Pipelines link in the left navigation. The Pipelines section gives you visibility into any pipelines you have set up along with the ability to manage aspects of your project’s CI/CD. You can see the different resources that are present as part of your CI/CD process, view logs of executing pipelines (i.e., pipeline runs), and drill into pipeline runs to view the current or previous status of a CI/CD pipeline.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console.png" alt="OpenShift Pipelines" width="512" height="168" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-openshift-developer-console-300x98.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-637787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console.png" alt="OpenShift Pipelines Preview" width="512" height="271" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/pipelines-preview-openshift-developer-console-300x159.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;You can learn more about OpenShift Pipelines, which is currently in Dev Preview, &lt;a href="https://blog.openshift.com/cloud-native-ci-cd-with-openshift-pipelines/"&gt;here.&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Try the developer-centric changes for yourself&lt;/h2&gt; &lt;p&gt;To really get a sense of how the Developer Perspective in the web console can help you be more productive on Red Hat OpenShift, try it out for yourself. You can &lt;a href="http://developers.redhat.com/products/codeready-containers"&gt;install a 4.2 OpenShift cluster by following the download link here&lt;/a&gt;. There are several infrastructure options available, including “Laptop,” which allows you to &lt;a href="http://developers.redhat.com/products/codeready-containers"&gt;install an OpenShift cluster locally using Code Ready Containers&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Learn more about &lt;a href="https://developers.redhat.com/openshift/"&gt;application development with OpenShift at developers.redhat.com/openshif&lt;/a&gt;t.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#38;linkname=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-developer-perspective%2F&amp;#038;title=Tour%20of%20the%20Developer%20Perspective%20in%20the%20Red%20Hat%20OpenShift%204.2%20web%20console" data-a2a-url="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/" data-a2a-title="Tour of the Developer Perspective in the Red Hat OpenShift 4.2 web console"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/"&gt;Tour of the Developer Perspective in the Red Hat OpenShift 4.2 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/e5UlqbL1-dk" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Of all of the new features of the Red Hat OpenShift 4.2 release, what I’ve been looking forward to the most are the developer-focused updates to the web console. If you’ve used OpenShift 4.1, then you’re probably already familiar with the updated Administrator Perspective, which is where you can manage workloads, storage, networking, cluster settings, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/"&gt;Tour of the Developer Perspective in the Red Hat OpenShift 4.2 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">637567</post-id><dc:creator>Jan Kleinert</dc:creator><dc:date>2019-10-16T12:58:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/16/openshift-developer-perspective/</feedburner:origLink></entry><entry><title>Red Hat CodeReady Containers overview for Windows and macOS</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1g89D4gVzOA/" /><category term="OpenShift" /><category term="Red Hat CodeReady Containers" /><category term="OpenShift 4.2" /><author><name>David Millsaps</name></author><id>https://developers.redhat.com/blog/?p=639967</id><updated>2019-10-16T12:55:51Z</updated><published>2019-10-16T12:55:51Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/products/codeready-containers"&gt;Red Hat CodeReady Containers&lt;/a&gt; 1.0 is now available with support for Red Hat OpenShift 4.2. CodeReady Containers is &amp;#8220;OpenShift on your laptop,&amp;#8221; the easiest way to get a local OpenShift environment running on your machine. You can get an overview of CodeReady Containers in the &lt;a href="https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/"&gt;tech preview launch post&lt;/a&gt;. You can &lt;a href="https://developers.redhat.com/products/codeready-containers"&gt;download CodeReady Containers from the product page&lt;/a&gt;.&lt;span id="more-639967"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;For the launch, Brian Tannous from Red Hat Cloud Platforms has put together handy video guides to installing CodeReady Containers and deploying your first application to OpenShift.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/openshift/local-openshift-windows/"&gt;&lt;img class=" size-full wp-image-641527 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-windows-cta.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-windows-cta.jpg" alt="local openshift windows-cta" width="800" height="450" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-windows-cta.jpg 800w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-windows-cta-300x169.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-windows-cta-768x432.jpg 768w" sizes="(max-width: 800px) 100vw, 800px" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://developers.redhat.com/openshift/local-openshift-windows/"&gt;Local OpenShift on Windows with Red Hat CodeReady Containers&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/openshift/local-openshift-macos/"&gt;&lt;img class=" size-full wp-image-641537 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-macos-cta.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-macos-cta.jpg" alt="local-openshift-macos-cta" width="800" height="450" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-macos-cta.jpg 800w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-macos-cta-300x169.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/local-openshift-macos-cta-768x432.jpg 768w" sizes="(max-width: 800px) 100vw, 800px" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://developers.redhat.com/openshift/local-openshift-macos/"&gt;Local OpenShift on MacOS with Red Hat CodeReady Containers&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Learn more about application development with OpenShift at&lt;a href="https://developers.redhat.com/openshift/"&gt; developers.redhat.com/openshift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Flocal-openshift%2F&amp;#038;title=Red%20Hat%20CodeReady%20Containers%20overview%20for%20Windows%20and%20macOS" data-a2a-url="https://developers.redhat.com/blog/2019/10/16/local-openshift/" data-a2a-title="Red Hat CodeReady Containers overview for Windows and macOS"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/local-openshift/"&gt;Red Hat CodeReady Containers overview for Windows and macOS&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1g89D4gVzOA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat CodeReady Containers 1.0 is now available with support for Red Hat OpenShift 4.2. CodeReady Containers is &amp;#8220;OpenShift on your laptop,&amp;#8221; the easiest way to get a local OpenShift environment running on your machine. You can get an overview of CodeReady Containers in the tech preview launch post. You can download CodeReady Containers from [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/local-openshift/"&gt;Red Hat CodeReady Containers overview for Windows and macOS&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">639967</post-id><dc:creator>David Millsaps</dc:creator><dc:date>2019-10-16T12:55:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/16/local-openshift/</feedburner:origLink></entry><entry><title>How to use odo the developer-centric CLI with OpenShift 4</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/09nVIYPK7v8/" /><category term="odo" /><category term="OpenShift" /><category term="OpenShift 4.2" /><author><name>Daniel Helfand</name></author><id>https://developers.redhat.com/blog/?p=637807</id><updated>2019-10-16T12:47:43Z</updated><published>2019-10-16T12:47:43Z</published><content type="html">&lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/9QKTKjxgYsw?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Working in a fast, iterative manner isn’t a practice exclusive to software developers: It’s the way people like to work. Being able to make a series of small changes and testing each change along the way to addressing a larger problem helps assure that the right choices are being made toward the end result.&lt;/p&gt; &lt;p&gt;For developers working with OpenShift, the experience described above shouldn’t be any different. &lt;a href="https://developers.redhat.com/products/odo"&gt;odo is a developer-centric CLI&lt;/a&gt; that helps developers implement, design and test source code with OpenShift faster. It’s one of a series of tools being released for general availability with the launch of OpenShift 4.2.&lt;/p&gt; &lt;p&gt;With odo, the ability to work on local source code, make changes, and just as quickly push changes up to an OpenShift cluster is possible with this easy-to-use tool. If you’re familiar with git, the flow of using odo should be very familiar.&lt;/p&gt; &lt;p&gt;By running a few CLI commands, you can push up local source code you are working on to OpenShift and have that source running on a container. Whenever you are ready to deploy code out to an OpenShift project, you can view several programming language options available with odo by running the command below:&lt;/p&gt; &lt;pre&gt;$ odo catalog list components odo Supported OpenShift Components: NAME       PROJECT     TAGS java       openshift   11,8,latest nodejs     openshift   10,8,8-RHOAR,latest OpenShift Components: NAME              PROJECT  TAGS dotnet            openshift 2.1,2.2,latest golang            openshift 1.11.5,latest httpd             openshift 2.4,latest modern-webapp     openshift 10.x,latest nginx             openshift 1.10,1.12,latest perl              openshift 5.24,5.26,latest php               openshift 7.0,7.1,7.2,latest python            openshift 2.7,3.6,latest ruby              openshift 2.4,2.5,latest&lt;/pre&gt; &lt;p&gt;These language options correspond to what are called builder images, which are container image definitions that can be used to support application source code developed in a particular language. In addition to selecting a language itself, you will be able to choose a particular version of a language as well.&lt;/p&gt; &lt;p&gt;To select a language, in the root of the source code directory you are working in locally, you can run the following command&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ odo create &amp;#60;language&amp;#62; app&lt;/code&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;odo create&lt;/code&gt; command specifies that you are creating a local configuration that will be used to track how you want your code to be deployed out to OpenShift. &lt;code&gt;&amp;#60;language&amp;#62;&lt;/code&gt; in the above command corresponds to the programming language your application is written in.&lt;code&gt;app&lt;/code&gt; corresponds to the name of the application that will be deployed. While you can give the application a specific name, it is not mandatory and you can deploy your code without specifying a name.&lt;/p&gt; &lt;p&gt;If you were deploying a Node.js application using odo, the odo command you would run would be similar to what is shown below:&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ odo create nodejs app&lt;/code&gt;&lt;/p&gt; &lt;p&gt;After running &lt;code&gt;odo create&lt;/code&gt;, all that is needed to deploy your code out to OpenShift is to run the following command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;$ odo push&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;odo create &lt;/code&gt; is similar to the idea of a &lt;code&gt;git init&lt;/code&gt; where you are initializing that a local directory has source code written in a particular language. Editing the source code locally after running &lt;code&gt;odo create&lt;/code&gt; is similar to a &lt;code&gt;git commit&lt;/code&gt;. When you are committing to a change, you haven’t actually pushed that change remotely to be available in a git repository yet. odo follows this same flow that gives you control of when source code is actually deployed out to OpenShift.&lt;/p&gt; &lt;p&gt;When &lt;code&gt;odo push&lt;/code&gt; completes, your source code will be running on a container out in your OpenShift project. After an initial deployment via &lt;code&gt;odo push&lt;/code&gt;, odo has the ability to quickly change and redeploy source code to your OpenShift cluster.&lt;/p&gt; &lt;p&gt;To alter an application component after a first &lt;code&gt;odo push&lt;/code&gt;, you can simply change your source code locally and run &lt;code&gt;odo push&lt;/code&gt; again. Upon completion of the command, your changes should be running on OpenShift.&lt;/p&gt; &lt;p&gt;While running an additional &lt;code&gt;odo push&lt;/code&gt; is easy enough to push code changes, you can further simplify your redeployment using &lt;code&gt;odo watch&lt;/code&gt;. By running &lt;code&gt;odo watch&lt;/code&gt; in the directory you are working in, your code changes will automatically pushed up to OpenShift each time you make a local change without running&lt;br /&gt; &lt;code&gt;odo push&lt;/code&gt; again.&lt;/p&gt; &lt;p&gt;Another exciting feature that is currently in tech preview as part of the odo GA release is the ability to debug source code that is deployed on OpenShift. odo has a command called &lt;code&gt;&lt;a href="https://github.com/openshift/odo/blob/master/docs/proposals/odo-debug.md"&gt;odo debug&lt;/a&gt;&lt;/code&gt; that allows you to remotely debug your code. The benefits of using a debugger locally are great, but odo allows you to have those same capabilities for code that is running in the environment it will eventually be hosted in. Keep an eye out for developments around &lt;code&gt;odo debug&lt;/code&gt; as it reaches a more mature state in future releases.&lt;/p&gt; &lt;p&gt;In addition to working with source code changes, odo allows you to manage other aspects of your deployed source code, such as creating a url for the application, linking your deployed application component to other application components deployed on OpenShift, viewing logs of deployed applications, and many other features. odo helps you focus on the source code you are writing for applications rather than all the details of hosting that application component on OpenShift.&lt;/p&gt; &lt;p&gt;odo is one of the many tools being built at Red Hat that reflects the way developers like to work. Developing directly against a development environment and knowing that the code you are working on runs on OpenShift from the start of your work to the end is what odo was created for.&lt;/p&gt; &lt;p&gt;In addition to this blog post, I have put together a video that walks through the capabilities of odo and shows how to deploy an application out to OpenShift. You can find out how to install, get started, and submit feedback on odo in the &lt;a href="https://github.com/openshift/odo"&gt;odo GitHub repository&lt;/a&gt;. We have an &lt;a href="https://developers.redhat.com/courses/openshift/odo-command-line/?loc=null"&gt;interactive tutorial&lt;/a&gt; available that allows users to learn more about odo and use it to deploy and iterate on a sample application with OpenShift. You can also view some of our past blog posts and videos on adding support for a programming language with odo (&lt;a href="https://developers.redhat.com/blog/2019/07/15/using-a-custom-builder-image-on-red-hat-openshift-with-openshift-do/"&gt;blog&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=gc29u3rbioI"&gt;video&lt;/a&gt;) and using &lt;a href="https://developers.redhat.com/blog/2019/08/14/openshift-development-with-interactive-odo/"&gt;interactive mode with odo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;We are excited to see all the creative ways that developers use odo, and, more importantly, see all the things you create with it.&lt;/p&gt; &lt;p&gt;Learn more about &lt;a href="https://developers.redhat.com/openshift/"&gt;application development with OpenShift at developers.redhat.com/openshif&lt;/a&gt;t.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#38;linkname=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#38;linkname=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#38;linkname=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#38;linkname=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#38;linkname=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#38;linkname=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#38;linkname=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F16%2Fopenshift-do-odo-developer-cli-openshift%2F&amp;#038;title=How%20to%20use%20odo%20the%20developer-centric%20CLI%20with%20OpenShift%204" data-a2a-url="https://developers.redhat.com/blog/2019/10/16/openshift-do-odo-developer-cli-openshift/" data-a2a-title="How to use odo the developer-centric CLI with OpenShift 4"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/openshift-do-odo-developer-cli-openshift/"&gt;How to use odo the developer-centric CLI with OpenShift 4&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/09nVIYPK7v8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Working in a fast, iterative manner isn’t a practice exclusive to software developers: It’s the way people like to work. Being able to make a series of small changes and testing each change along the way to addressing a larger problem helps assure that the right choices are being made toward the end result. For [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/16/openshift-do-odo-developer-cli-openshift/"&gt;How to use odo the developer-centric CLI with OpenShift 4&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">637807</post-id><dc:creator>Daniel Helfand</dc:creator><dc:date>2019-10-16T12:47:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/16/openshift-do-odo-developer-cli-openshift/</feedburner:origLink></entry><entry><title>Keycloak 7.0.1 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/49InAvue_zY/keycloak-701-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><category term="Keycloak Release" scheme="searchisko:content:tags" /><author><name>Keycloak</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_7_0_1_released</id><updated>2019-10-16T00:00:00Z</updated><published>2019-10-16T00:00:00Z</published><content type="html">&lt;p&gt;To download the release go to &lt;a href="https://www.keycloak.org/downloads.html"&gt;Keycloak downloads&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt;. The full list of resolved issues are available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%207.0.1"&gt;JIRA&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="https://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/49InAvue_zY" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to Keycloak downloads. For details on what is included in the release check out the Release notes. The full list of resolved issues are available in JIRA Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Keycloak</dc:creator><dc:date>2019-10-16T00:00:00Z</dc:date><feedburner:origLink>https://www.keycloak.org/2019/10/keycloak-701-released.html</feedburner:origLink></entry><entry><title>What’s new in Red Hat Dependency Analytics</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nWhfRLZn0ko/" /><category term="Developer Tools" /><category term="Eclipse Che" /><category term="Java" /><category term="Python" /><category term="VS Code" /><category term="IDE" /><author><name>Parag Dave</name></author><id>https://developers.redhat.com/blog/?p=626717</id><updated>2019-10-15T12:00:56Z</updated><published>2019-10-15T12:00:56Z</published><content type="html">&lt;p&gt;We are excited to announce a new release of Red Hat Dependency Analytics, a solution that enables developers to create better applications by evaluating and adding high-quality open source components, directly from their IDE.&lt;/p&gt; &lt;p&gt;Red Hat Dependency Analytics helps your development team avoid security and licensing issues when building your applications. It plugs into the developer’s IDE, automatically analyzes your software composition, and provides recommendations to address security holes and licensing problems that your team may be missing.&lt;/p&gt; &lt;p&gt;Without further ado, let’s jump into the new capabilities offered in this release. This release includes a new version of the IDE plugin and the server-side analysis service hosted by Red Hat.&lt;span id="more-626717"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Support for Python applications&lt;/h3&gt; &lt;p&gt;Along with &lt;a href="https://developers.redhat.com/developer-tools/java"&gt;Java&lt;/a&gt; (maven) and JavaScript (npm), Dependency Analytics now offers its full set of capabilities for Python (PyPI) applications. From your IDE, you can perform the vulnerability and license analysis of the “requirements.txt” file of your Python application, incorporate the recommended fixes, and generate the stack analysis report for more details.&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/sy2gUH2iPOg" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;Software composition analysis based on current vulnerability data&lt;/h3&gt; &lt;p&gt;An estimated 15,000 open source packages get updated every day. On average, three new vulnerabilities get posted every day across JavaScript (npm) and Python (PyPi) packages. With this new release, the server-side analysis service hosted by Red Hat automatically processes the daily updates to open source packages that it is tracking. The hosted service also automatically ingests new vulnerability data posted to &lt;a href="https://nvd.nist.gov/"&gt;National Vulnerability Database&lt;/a&gt; (NVD) for JavaScript and Python packages. This allows the IDE plugin and API calls to provide source code analysis based on current vulnerability and release data.&lt;/p&gt; &lt;h3&gt;Analyze transitive dependencies&lt;/h3&gt; &lt;p&gt;In addition to the direct dependencies included in your application, Dependency Analytics now leverages the package managers to discover and add the dependencies of those dependencies, called “transitive” dependencies, to the dependency graph of your application. Analysis of your application is performed across the whole graph model and recommendations for fixes are provided across the entire set of dependencies.&lt;/p&gt; &lt;p&gt;&lt;img class="wp-image-630267 aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.16.08-AM-300x188.png" alt="" width="700" height="439" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.16.08-AM-300x188.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.16.08-AM-768x480.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.16.08-AM-1024x640.png 1024w" sizes="(max-width: 700px) 100vw, 700px" /&gt;&lt;/p&gt; &lt;h3&gt;Recommendations about complementary open source libraries&lt;/h3&gt; &lt;p&gt;With this release, Dependency Analytics looks to recommend high-quality open source libraries that are complementary to the dependencies included in your application. The machine learning technology of the hosted service collects and analyzes various statistics on GitHub to curate a list of high-quality open source libraries that can be added to the current set of dependencies to augment your application. You can provide your feedback about the add-on libraries by clicking on the “thumbs-up” or “thumbs-down” icons shown for each recommendation. Your feedback is automatically processed to improve the quality of the recommendations.&lt;/p&gt; &lt;p&gt;&lt;img class="wp-image-630277 aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.29.44-AM-300x188.png" alt="" width="701" height="439" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.29.44-AM-300x188.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.29.44-AM-768x480.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/09/Screen-Shot-2019-09-19-at-10.29.44-AM-1024x640.png 1024w" sizes="(max-width: 701px) 100vw, 701px" /&gt;&lt;/p&gt; &lt;h3&gt;IDE plugin support&lt;/h3&gt; &lt;p&gt;The Dependency Analytics IDE plugin is now available for VS Code, Eclipse Che, and any JetBrains IDE, including IntelliJ and PyCharm.&lt;/p&gt; &lt;p&gt;We will continuously release new updates to our Dependency Analytics solution so you can minimize the delays in delivery of your applications due to last-minute security and licensing related issues.&lt;/p&gt; &lt;p&gt;Stay tuned for further updates; we look forward to your feedback about Dependency Analytics.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F15%2Fwhats-new-in-red-hat-dependency-analytics%2F&amp;#038;title=What%E2%80%99s%20new%20in%20Red%20Hat%20Dependency%20Analytics" data-a2a-url="https://developers.redhat.com/blog/2019/10/15/whats-new-in-red-hat-dependency-analytics/" data-a2a-title="What’s new in Red Hat Dependency Analytics"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/15/whats-new-in-red-hat-dependency-analytics/"&gt;What&amp;#8217;s new in Red Hat Dependency Analytics&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nWhfRLZn0ko" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are excited to announce a new release of Red Hat Dependency Analytics, a solution that enables developers to create better applications by evaluating and adding high-quality open source components, directly from their IDE. Red Hat Dependency Analytics helps your development team avoid security and licensing issues when building your applications. It plugs into the [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/15/whats-new-in-red-hat-dependency-analytics/"&gt;What&amp;#8217;s new in Red Hat Dependency Analytics&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">626717</post-id><dc:creator>Parag Dave</dc:creator><dc:date>2019-10-15T12:00:56Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/15/whats-new-in-red-hat-dependency-analytics/</feedburner:origLink></entry></feed>
